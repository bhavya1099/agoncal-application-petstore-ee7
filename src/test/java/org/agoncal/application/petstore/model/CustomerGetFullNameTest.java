
// ********RoostGPT********
/*
Test generated by RoostGPT for test java-customannotation-test using AI Type Open AI and AI Model gpt-3.5-turbo

ROOST_METHOD_HASH=getFullName_15581f7a50
ROOST_METHOD_SIG_HASH=getFullName_a3a8c40aad

```
Scenario 1: Test when both first name and last name are not null
Details:
  TestName: testGetFullNameWhenBothNamesNotNull
  Description: This test validates the behavior of getFullName method when both first name and last name are not null.
  Execution:
    Arrange: Set firstName to a non-null value, set lastName to a non-null value.
    Act: Call getFullName method.
    Assert: Ensure that the returned full name is the concatenation of firstName and lastName.
  Validation:
    The assertion verifies that the method correctly combines the first name and last name to form the full name.

Scenario 2: Test when first name is null and last name is not null
Details:
  TestName: testGetFullNameWhenFirstNameNull
  Description: This test checks the behavior of getFullName method when first name is null and last name is not null.
  Execution:
    Arrange: Set firstName to null, set lastName to a non-null value.
    Act: Call getFullName method.
    Assert: Verify that the returned full name is the concatenation of an empty string and lastName.
  Validation:
    This test ensures that the method handles null first name correctly and still returns the correct full name.

Scenario 3: Test when first name is not null and last name is null
Details:
  TestName: testGetFullNameWhenLastNameNull
  Description: This test examines the behavior of getFullName method when first name is not null and last name is null.
  Execution:
    Arrange: Set firstName to a non-null value, set lastName to null.
    Act: Invoke getFullName method.
    Assert: Check that the returned full name is the concatenation of firstName and an empty string.
  Validation:
    The assertion confirms that the method handles null last name appropriately and still generates the correct full name.

Scenario 4: Test when both first name and last name are null
Details:
  TestName: testGetFullNameWhenBothNamesNull
  Description: This test validates the behavior of getFullName method when both first name and last name are null.
  Execution:
    Arrange: Set firstName to null, set lastName to null.
    Act: Call getFullName method.
    Assert: Ensure that the returned full name is an empty string.
  Validation:
    This test ensures that the method gracefully handles both names being null and returns an empty string for the full name.
```
*/

// ********RoostGPT********

package org.agoncal.application.petstore.model;

import static org.junit.Assert.assertEquals;
import org.junit.Test;
import org.junit.experimental.categories.Category;
import org.agoncal.application.petstore.constraints.Email;
import org.agoncal.application.petstore.constraints.Login;
import javax.persistence.*;
import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Past;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlRootElement;
import java.io.Serializable;
import java.security.MessageDigest;
import java.util.*;

public class CustomerGetFullNameTest {

	@Test
	@Category(Categories.valid.class)
	public void testGetFullNameWhenBothNamesNotNull() {
		// Arrange
		Customer customer = new Customer();
		customer.setFirstName("John");
		customer.setLastName("Doe");
		// Act
		String fullName = customer.getFullName();
		// Assert
		assertEquals("John Doe", fullName);
	}

	@Test
	@Category(Categories.valid.class)
	public void testGetFullNameWhenFirstNameNull() {
		// Arrange
		Customer customer = new Customer();
		customer.setFirstName(null);
		customer.setLastName("Doe");
		// Act
		String fullName = customer.getFullName();
		// Assert
		assertEquals(" Doe", fullName);
	}

	@Test
	@Category(Categories.valid.class)
	public void testGetFullNameWhenLastNameNull() {
		// Arrange
		Customer customer = new Customer();
		customer.setFirstName("John");
		customer.setLastName(null);
		// Act
		String fullName = customer.getFullName();
		// Assert
		assertEquals("John ", fullName);
	}

	@Test
	@Category(Categories.valid.class)
	public void testGetFullNameWhenBothNamesNull() {
		// Arrange
		Customer customer = new Customer();
		customer.setFirstName(null);
		customer.setLastName(null);
		// Act
		String fullName = customer.getFullName();
		// Assert
		assertEquals(" ", fullName);
	}

}