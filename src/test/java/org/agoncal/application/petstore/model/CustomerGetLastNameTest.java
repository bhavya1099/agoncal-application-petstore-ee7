
// ********RoostGPT********
/*
Test generated by RoostGPT for test java-customannotation-test_clone using AI Type  and AI Model

ROOST_METHOD_HASH=getLastName_026f18c38b
ROOST_METHOD_SIG_HASH=getLastName_4814a2dee7

"""
Scenario 1: Test to verify that getLastName method works correctly

Details:
  TestName: testGetLastName
  Description: This test is meant to check if the getLastName method is able to return the correct last name of the customer.
Execution:
  Arrange: Create a new customer object and set the last name using the setLastName method.
  Act: Invoke the getLastName method on the customer object.
  Assert: Use JUnit assertions to compare the actual result from the getLastName method with the expected last name.
Validation:
  The assertion aims to verify that the getLastName method correctly returns the last name of the customer. The expected result is the last name that was set using the setLastName method. This test is significant as it ensures that the application is able to correctly retrieve the last name of the customer.

Scenario 2: Test to verify that getLastName method returns null when the last name is not set

Details:
  TestName: testGetLastNameWhenNotSet
  Description: This test is meant to check if the getLastName method returns null when the last name of the customer has not been set.
Execution:
  Arrange: Create a new customer object without setting the last name.
  Act: Invoke the getLastName method on the customer object.
  Assert: Use JUnit assertions to compare the actual result from the getLastName method with null.
Validation:
  The assertion aims to verify that the getLastName method correctly returns null when the last name of the customer has not been set. This test is significant as it ensures that the application correctly handles cases where the last name of the customer is not available.

Scenario 3: Test to verify that getLastName method handles empty last name correctly

Details:
  TestName: testGetLastNameWhenEmpty
  Description: This test is meant to check if the getLastName method is able to handle cases where the last name of the customer is an empty string.
Execution:
  Arrange: Create a new customer object and set the last name as an empty string using the setLastName method.
  Act: Invoke the getLastName method on the customer object.
  Assert: Use JUnit assertions to compare the actual result from the getLastName method with an empty string.
Validation:
  The assertion aims to verify that the getLastName method correctly returns an empty string when the last name of the customer is set as such. This test is significant as it ensures that the application correctly handles cases where the last name of the customer is an empty string.
"""
*/

// ********RoostGPT********

package org.agoncal.application.petstore.model;

import org.junit.jupiter.api.Tag;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import org.junit.jupiter.api.*;
import org.agoncal.application.petstore.constraints.Email;
import org.agoncal.application.petstore.constraints.Login;
import javax.persistence.*;
import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Past;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlRootElement;
import java.io.Serializable;
import java.security.MessageDigest;
import java.util.*;

public class CustomerGetLastNameTest {

	@Test
	@Tag("valid")
	public void testGetLastName() {
		Customer customer = new Customer();
		customer.setLastName("Smith");
		String actualLastName = customer.getLastName();
		assertEquals("Smith", actualLastName, "The actual last name does not match the expected last name.");
	}

	@Test
	@Tag("boundary")
	public void testGetLastNameWhenNotSet() {
		Customer customer = new Customer();
		String actualLastName = customer.getLastName();
		assertNull(actualLastName, "The actual last name should be null as it has not been set.");
	}

	@Test
	@Tag("boundary")
	public void testGetLastNameWhenEmpty() {
		Customer customer = new Customer();
		customer.setLastName("");
		String actualLastName = customer.getLastName();
		assertEquals("", actualLastName, "The actual last name should be an empty string as it has been set as such.");
	}

}